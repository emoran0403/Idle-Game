@ Adding new Locations -
* add a location summary and update (IAllLocations) + (ICurrentLocationOptions)
//# <location>summary where location is the name of the location for game purposes
* IF quests - add those quests to (ICurrentQuestOptions) and (IAllQuests + the constant object export)
* IF quests - add those quests to a slice + add reducer to main reducer + add this slice to (AllState) and (AllStateQuestSlices)
* IF quests - {GameContainer} update the quest complete useEffect dependency array with the new quest array slice
* IF quests - {GameContainer} update the quest complete useEffect switch statement and the quests import
* IF quests - {GameContainer} update imports
* IF quests - update default player data with the slice info
* IF quests - {QuestPanel} update useSelector section to pull in new quest slice
* IF quests - {QuestPanel} spread out new quests into AllQuestsFromStateFlat
* IF quests - {QuestPanel} add new quest array slice to create composite quest useEffect
* IF enemies - add enemy entries to constant file, and all enemies array in that file
* IF enemies - update (IAllEnemies) and create an I<location>Summary interface
* IF enemies - update (IEnemyLocations) with that interface
* IF enemies - add enemies to (ICurrentTargetOptions)
* {MapPanel} - add a button for the location
* - add typings for enemies search => //@ recreate this for each location
* - just check all the places for locations
@ when adding new masters, make sure to add enemies that match taskList[i].task

@ Adding new Skills - 
 * {Types} - update (ICurrentResourceOptions) with the skilling options
 * {Redux} - create a slice
 * {Reducers} - implement that slice in main reducer
 * {Types} - create a type for the new slice
 * {Types} - update (AllState) with new slice
 * {DefaultPlayerData} - update with new slice defaults

//! how can i use dev and prod vars on .env and on heroku?

//# Fixes
* {Game Container} clean up runecrafting tick function
* fix admin buttons in App
* Logic - experience and levels is displaying too high for some reason :/
* remove boilerplate commits
* I forgot to add silver ore lol
* add a chatlog for damaging but not killing an enemy
* change all props which use single chat log function to use the multiple chat log function
* update get enemy object to scrape max hit from the wiki
* add a check to prevent xp from going over 200M
* swap out all instances of handleNewChatLog with handleMultipleChatLogs
* grammar when fishing anchovies


//# Quality of life
* {MapPanel} - organize locations.  maybe towns / cities and then their related areas?
* {BankPanel} - use images for the items, with display name as title tag
* {skillspanel} - put the hatchet and pickaxe selectors side by side
* Bank shows items in ascending level order
* Bank to show images for items
** add currentEquipment to redux state to persist outfits across logins
** add hatchet and pickaxe selection to state to persist options across logins
*** need a way to reward those quest which give ANY xp
*** maybe make the game choose the next available quest automatically
*** get a changelog from github for the lobby
*** offline progress


//@ ARTISAN - skills that involve taking resources and transforming or consuming them
//# SMITHING
//# SUMMONING
@ summoning may need to wait until active buffs
@ summoning may need to wait until item drops are added
* update get enemy object to grab charm chances 
* build out function to determine if the player earns a charm
* add spirit shards to the store
* add sections to the store (summoning, runes, ammunition, weapons, armor, tools, etc)
* build out list of summoning familiars
* add their tertiary ingredients to the store or as monster drops
* bank slice needs to be made to hold summoning items
* how will summoning familairs interact with combat?
* how will summoning familairs interact with skilling?

//# CRAFTING
//# COOKING

//# RUNECRAFTING
- add runecrafting altar locations to existing locations
- update game container with runecrafting function
- create a slice for runes
//# FLETCHING
//# HERBLORE
//# CONSTRUCTION

//@ SUPPORT - skills that just take some time to complete
//# AGILITY


//@ GATHERING - skills that generate new resources
//# FARMING
//# HUNTER
//# DIVINATION

//@ BIG LOL - wide variety of interactions to deal with
//# INVENTION
//# ARCHAEOLOGY
//# DUNGEONEERING

//# World Map
* grab an image for the world map, place these divs over it, setting the pixels as needed
<div
                onClick={(e) => doClick(e)}
                style={{ border: "2px solid red", position: "absolute", top: "20px", left: "20px", width: "30px", height: "30px", zIndex: "5" }}
              ></div>


//# Locations
* Varrock
* Al-Kharid
* Wizard tower + runespan
* Slayer dungeons / caves

//# Features
* bosses

* clue scrolls

* enemy item drops

* high scores list - read multiple MongoDB call


//# THIEVING DONE***********************
* DONE - update GameContainer to handle thieving skill - need a stun state as a number in component state, each game tick decrements if >0
* DONE - define a function to determine of the player succeeds or fails at thieving
* DONE - update skills panel to include thieving opportunities
* DONE - update location summaries to include thieving opportunities
* DONE - update currentresourcecomp to handle thieving skill
* DONE - create a constants file with thieving opportunities

//# PRAYER DONE**********************************
* DONE - update combat tick to dispatch prayer xp for the XPGivenPrayer amount
* DONE - update enemy object utility to account for bones being dropped
* DONE - add an XPGivenPrayer property to all enemies, defaulting to 0
* DONE - update typings for enemies

//# MINING DONE**************************************
* DONE - add mining to skills panel
* DONE - add mining to game GameContainer
* DONE - add case to currentresourcecomp for mining
* DONE - conditionally check for crystal hatchets and pickaxes in shop and skilling panel, as these are special items
* DONE - add mining resources to bank
* DONE - add mining calculations to Ores file under constants
* DONE - add ores to resource options type
* DONE - add mining options to location summaries
* DONE - update IListOfPickaxeOptions for all picks

//# SLAYER
* DONE - message in chat when the player died
* DONE - combat panel needs to show a mesage saying the player is healing
* DONE - message in chat saying the player is healing + a count down
* DONE - player lp needs to go to zero 
@ FIXED - when there is no task, a 0 shows up in skills panel lol == the check for task amount now checks for an amount >0 lool
@ FIXED - slayer task assigns name (skeleton32) when it should be a general task instead == task is now the actual task string, and it checks this against the slayer task of the enemy
@ healing seems to work
@ damage to player seems to work
@ FIXED damage to enemy is not working - forgot to add an else statements
@ FIXED - player damage is waaay too low LOL
@ FIXED equipping headslot items - Uncaught TypeError: Cannot read properties of undefined (reading 'styleBonusMelee')
* DONE - slayer needs chat logs
* DONE - add slayer task to the combat panel
* DONE - add a check in combat to see if the player has chosen a slayer task monster
* DONE - have combat tick respect player life points
* DONE - implement player lifepoints in game GameContainer
* DONE - implement a function calculating damage done to the player
* DONE - skillspanel needs a slayer panel where the player can get a slayer task from the master in that area
* DONE - add state slice to track the slayer task
* DONE - add function to randomly choose a task, if a task is chosen with a too high lvl, then reroll
* DONE - add a check in combat panel to disable enemies based on their slayer level
* DONE - wall beast and warped cockroach do not show up = they had spaces in their name loool
* DONE - add lumbridge cave enemies to all enemies
* DONE - add lumbridge catacomb enemies to all enemies
* DONE - add lumbridge cave location
* DONE - add lumbridge catacomb location
* DONE - add slayer level req to enemies if it is > 1
* DONE - add slayer level req to enemies and their type



player has some logs in their inventory
player has a full inventory
player has no logs in inventory

player has excess logs in bank
player has exactly enough logs in bank
player has under 28 logs in bank
player has 0 logs in bank